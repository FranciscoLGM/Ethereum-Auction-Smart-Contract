{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "AuctionEnded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "NewBid",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "OwnerWithdrawal",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "PartialRefund",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Refunded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "bid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "commissionRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endAuction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "extensionTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllBids",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "bidderAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							}
						],
						"internalType": "struct Auction.Bidder[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getRemainingTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getWinner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBidder",
				"outputs": [
					{
						"internalType": "address",
						"name": "bidderAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isAuctionEnded",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minBidIncrease",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "pendingReturns",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawWinningBid",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Francisco LÃ³pez G",
			"details": "Implements an ETH auction system with partial refunds, commission fees, and automatic time extensions",
			"events": {
				"AuctionEnded(address,uint256)": {
					"params": {
						"amount": "Winning bid amount",
						"winner": "Address of the winning bidder"
					}
				},
				"NewBid(address,uint256)": {
					"params": {
						"amount": "Amount of the bid",
						"bidder": "Address of the bidder"
					}
				},
				"OwnerWithdrawal(address,uint256)": {
					"params": {
						"amount": "Amount withdrawn (full winning bid amount)",
						"owner": "Address of the contract owner receiving funds"
					}
				},
				"PartialRefund(address,uint256)": {
					"params": {
						"amount": "Full refund amount (no commission)",
						"bidder": "Address receiving refund"
					}
				},
				"Refunded(address,uint256)": {
					"params": {
						"amount": "Refund amount after commission",
						"bidder": "Address receiving refund"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"bid()": {
					"details": "Bid must be at least 5% higher than current highest bidExtends auction time if bid is placed within last 10 minutesEmits NewBid event on successful bidAutomatically finalizes auction if time has expired"
				},
				"constructor": {
					"details": "Sets default auction parameters (7 day duration, 5% min increase, 2% commission)"
				},
				"endAuction()": {
					"details": "Can only be called by the owner after the auction end time has passedEmits `AuctionEnded` event with winner address and winning amount"
				},
				"getAllBids()": {
					"returns": {
						"_0": "Array of Bidder structs containing all bids"
					}
				},
				"getRemainingTime()": {
					"returns": {
						"_0": "secondsLeft Remaining time in seconds (0 if ended)"
					}
				},
				"getWinner()": {
					"details": "Only available after auction ends",
					"returns": {
						"_0": "Address and amount of winning bid"
					}
				},
				"withdraw()": {
					"details": "Applies commission if auction has endedEmits Refunded or PartialRefund event based on auction state"
				},
				"withdrawWinningBid()": {
					"details": "Can only be called by the owner after the auction has endedTransfers the full winning bid amount to the contract owner"
				}
			},
			"title": "Smart Contract Auction",
			"version": 1
		},
		"userdoc": {
			"events": {
				"AuctionEnded(address,uint256)": {
					"notice": "Emitted when auction ends"
				},
				"NewBid(address,uint256)": {
					"notice": "Emitted when a new bid is placed"
				},
				"OwnerWithdrawal(address,uint256)": {
					"notice": "Emitted when the owner withdraws the winning bid amount"
				},
				"PartialRefund(address,uint256)": {
					"notice": "Emitted when a partial refund is processed"
				},
				"Refunded(address,uint256)": {
					"notice": "Emitted when a full refund is processed"
				}
			},
			"kind": "user",
			"methods": {
				"bid()": {
					"notice": "Places a bid in the auction"
				},
				"commissionRate()": {
					"notice": "Commission rate percentage taken from refunds"
				},
				"constructor": {
					"notice": "Contract constructor initializing auction parameters"
				},
				"endAuction()": {
					"notice": "Ends the auction and declares the winner"
				},
				"endTime()": {
					"notice": "Timestamp when the auction will end"
				},
				"extensionTime()": {
					"notice": "Time extension applied when bids are placed near end"
				},
				"getAllBids()": {
					"notice": "Get all bids placed in auction"
				},
				"getRemainingTime()": {
					"notice": "Get remaining auction time"
				},
				"getWinner()": {
					"notice": "Get winner information"
				},
				"highestBidder()": {
					"notice": "Current highest bidder information"
				},
				"isAuctionEnded()": {
					"notice": "Flag indicating if auction has been ended"
				},
				"minBidIncrease()": {
					"notice": "Minimum percentage increase for new bids (e.g., 105 = 5% increase)"
				},
				"owner()": {
					"notice": "Contract owner address"
				},
				"pendingReturns(address)": {
					"notice": "Mapping of addresses to their pending refund amounts"
				},
				"withdraw()": {
					"notice": "Withdraw refundable amounts"
				},
				"withdrawWinningBid()": {
					"notice": "Withdraws the winning bid amount to the owner"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Auction.sol": "Auction"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Auction.sol": {
			"keccak256": "0x4f3e59b98fd94230dc6cacf27239496cda5614c7dd2640179b9295d5a9b1bfb3",
			"license": "MIT",
			"urls": [
				"bzz-raw://29c0f23fd5cad16b94d070bc0277ee904fe8c95aba213239fc1dee678b7f682b",
				"dweb:/ipfs/QmcAx6KTAhhYBPnS9UfAHNxRpNC8njkjTnWoZmWC5nhnhX"
			]
		}
	},
	"version": 1
}